// generated with ast extension for cup
// version 0.8
// 15/0/2024 23:31:38


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MultipleCharConstList MultipleCharConstList);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(Relop Relop);
    public void visit(MultipleFormParsList MultipleFormParsList);
    public void visit(MultipleCondFacts MultipleCondFacts);
    public void visit(MultipleMulopFactors MultipleMulopFactors);
    public void visit(MultipleParamsList MultipleParamsList);
    public void visit(StatementList StatementList);
    public void visit(NamespaceList NamespaceList);
    public void visit(ConstVarDeclList ConstVarDeclList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(Designator Designator);
    public void visit(Condition Condition);
    public void visit(MultipleCondTerms MultipleCondTerms);
    public void visit(MultipleAddopTerms MultipleAddopTerms);
    public void visit(MultipleDesignatorExpansion MultipleDesignatorExpansion);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(MultipleNumConstList MultipleNumConstList);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(MultipleVarDeclList MultipleVarDeclList);
    public void visit(MultipleBoolConstList MultipleBoolConstList);
    public void visit(MulopModulus MulopModulus);
    public void visit(MulopDivision MulopDivision);
    public void visit(MulopMultiplication MulopMultiplication);
    public void visit(AddopSubstraction AddopSubstraction);
    public void visit(AddopAddition AddopAddition);
    public void visit(RelopLowerOrEqual RelopLowerOrEqual);
    public void visit(RelopLowerThan RelopLowerThan);
    public void visit(RelopGreaterOrEqual RelopGreaterOrEqual);
    public void visit(RelopGreaterThan RelopGreaterThan);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopIsEqual RelopIsEqual);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(MultipleDesignatorExpansionArray MultipleDesignatorExpansionArray);
    public void visit(MultipleDesignatorExpansionClassField MultipleDesignatorExpansionClassField);
    public void visit(NoMultipleDesignatorExpansion NoMultipleDesignatorExpansion);
    public void visit(ScopedDesignatorName ScopedDesignatorName);
    public void visit(RegularDesignatorName RegularDesignatorName);
    public void visit(ScopedDesignator ScopedDesignator);
    public void visit(RegularDesignator RegularDesignator);
    public void visit(FactorParenthesisGrouping FactorParenthesisGrouping);
    public void visit(FactorObjectWithParam FactorObjectWithParam);
    public void visit(FactorObjectNoParam FactorObjectNoParam);
    public void visit(FactorObjectArray FactorObjectArray);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorFunctionWithParam FactorFunctionWithParam);
    public void visit(FactorFunctionNoParam FactorFunctionNoParam);
    public void visit(FactorVariable FactorVariable);
    public void visit(MultipleMulop MultipleMulop);
    public void visit(NoMultipleMulopFactors NoMultipleMulopFactors);
    public void visit(Term Term);
    public void visit(MultipleAddop MultipleAddop);
    public void visit(NoMultipleAddopTerms NoMultipleAddopTerms);
    public void visit(NegatedTerm NegatedTerm);
    public void visit(NegativePrefixTerm NegativePrefixTerm);
    public void visit(PositivePrefixTerm PositivePrefixTerm);
    public void visit(ExpressionWithRelationalOperator ExpressionWithRelationalOperator);
    public void visit(SingleExpression SingleExpression);
    public void visit(MultipleConditionsAnd MultipleConditionsAnd);
    public void visit(NoMultipleCondFacts NoMultipleCondFacts);
    public void visit(ConditionBitwiseAnd ConditionBitwiseAnd);
    public void visit(MultipleConditionsOr MultipleConditionsOr);
    public void visit(NoMultipleCondTerms NoMultipleCondTerms);
    public void visit(ConditionBitwiseOr ConditionBitwiseOr);
    public void visit(MultipleParams MultipleParams);
    public void visit(NoMultipleParams NoMultipleParams);
    public void visit(ActualParameters ActualParameters);
    public void visit(DecrementStatement DecrementStatement);
    public void visit(IncrementStatement IncrementStatement);
    public void visit(FunctionCallWithParam FunctionCallWithParam);
    public void visit(FunctionCallNoParam FunctionCallNoParam);
    public void visit(AssignmentStatement AssignmentStatement);
    public void visit(SyntaxError SyntaxError);
    public void visit(StatementBlock StatementBlock);
    public void visit(PrintWithArgStatement PrintWithArgStatement);
    public void visit(PrintNoArgStatement PrintNoArgStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(NoReturnStatement NoReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DeclarationStatement DeclarationStatement);
    public void visit(ScopedType ScopedType);
    public void visit(RegularType RegularType);
    public void visit(MultipleArrayFormPars MultipleArrayFormPars);
    public void visit(MultipleRegularFormPars MultipleRegularFormPars);
    public void visit(NoMultipleFormPars NoMultipleFormPars);
    public void visit(ArrayParam ArrayParam);
    public void visit(RegularParam RegularParam);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(MultipleMethodDecl MultipleMethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodVoidName MethodVoidName);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(VoidMethodWithParam VoidMethodWithParam);
    public void visit(VoidMethodNoParam VoidMethodNoParam);
    public void visit(RetTypeMethodWithParam RetTypeMethodWithParam);
    public void visit(RetTypeMethodNoParam RetTypeMethodNoParam);
    public void visit(MultipleStatementList MultipleStatementList);
    public void visit(NoStatementList NoStatementList);
    public void visit(StaticInitializer StaticInitializer);
    public void visit(MultipleArrayVarDecl MultipleArrayVarDecl);
    public void visit(MultipleRegularVarDecl MultipleRegularVarDecl);
    public void visit(NoMultipleVarDeclList NoMultipleVarDeclList);
    public void visit(ArrayVariable ArrayVariable);
    public void visit(RegularVariable RegularVariable);
    public void visit(MultipleBoolConst MultipleBoolConst);
    public void visit(NoMultipleBoolConstList NoMultipleBoolConstList);
    public void visit(MultipleCharConst MultipleCharConst);
    public void visit(NoMultipleCharConstList NoMultipleCharConstList);
    public void visit(NumConstValue NumConstValue);
    public void visit(MultipleNumConst MultipleNumConst);
    public void visit(NoMultipleNumConstList NoMultipleNumConstList);
    public void visit(MultipleVarDecl MultipleVarDecl);
    public void visit(MultipleConstDecl MultipleConstDecl);
    public void visit(NoConstVarDecl NoConstVarDecl);
    public void visit(BoolConstDecl BoolConstDecl);
    public void visit(CharConstDecl CharConstDecl);
    public void visit(NumConstDecl NumConstDecl);
    public void visit(MultipleNamespace MultipleNamespace);
    public void visit(NoNamespace NoNamespace);
    public void visit(NamespaceName NamespaceName);
    public void visit(Namespace Namespace);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
